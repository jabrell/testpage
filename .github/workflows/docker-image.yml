name: Create Image

on:
  workflow_dispatch:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - 
        name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64, linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_aws:
    runs-on: ubuntu-latest
    permissions:
      packages: read
    steps:
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' > key.pem
          chmod 600 key.pem
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MY}}
      - name: Deploy to AWS
        run: |
          ssh -i key.pem  -o strictHostKeyChecking=accept-new ${{ env.SERVER }} "
          docker login ${{ env.REGISTRY }} -u username -p ${{ secrets.GITHUB_TOKEN }} &&
          docker pull ${{ env.IMAGE }} &&
          docker rm -f my-app || true &&
          docker run -d --name my-app -p 80:8000 ${{ env.IMAGE }}
          "
        shell: bash
        env:
          SERVER: ${{ secrets.AWS_USER }}@${{ secrets.AWS_IP }}
          IMAGE: ${{ env.REGISTRY }}/${{ github.actor }}/testpage:main